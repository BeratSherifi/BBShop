{"ast":null,"code":"export async function apiLogin(email, password) {\n  const response = await fetch('http://localhost:5197/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  return response.json();\n}\nexport async function apiRegister(username, email, password, fullname, role) {\n  const response = await fetch('http://localhost:5197/api/user', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n      fullname,\n      role\n    })\n  });\n  if (response.status === 201 || response.status === 204) {\n    // Return a success message or an empty object for successful registration\n    return {\n      message: 'Registration successful'\n    };\n  } else {\n    // Handle error response\n    const errorText = await response.text();\n    let errorMessage = 'Registration failed';\n    try {\n      const errorJson = JSON.parse(errorText);\n      if (errorJson && errorJson.message) {\n        errorMessage = errorJson.message;\n      }\n    } catch (e) {\n      errorMessage = errorText || errorMessage;\n    }\n    throw new Error(errorMessage);\n  }\n}\nexport async function apiGetUserProfile(userId, token) {\n  const response = await fetch(`http://localhost:5197/api/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch profile');\n  }\n  return response.json();\n}\nexport async function apiGetStores(token) {\n  const response = await fetch('http://localhost:5197/api/store', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch stores');\n  }\n  return response.json();\n}\nexport async function apiCreateStore(storeName, token) {\n  const formData = new FormData();\n  formData.append('storeName', storeName);\n  const response = await fetch('http://localhost:5197/api/store', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Failed to create store');\n  }\n  return response.json();\n}\nexport async function apiUpdateProduct(productId, productData, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    body: productData\n  });\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Failed to update product: ${errorText}`);\n  }\n\n  // Expect no content status for successful update\n  if (response.status === 204) {\n    return true;\n  }\n  return response.json();\n}\nexport async function apiDeleteProduct(productId, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Failed to delete product: ${errorText}`);\n  }\n\n  // Expect no content status for successful delete\n  if (response.status === 204) {\n    return true;\n  }\n  return response.json();\n}\nexport async function apiGetProductById(productId, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch product');\n  }\n  return response.json();\n}\nexport async function apiCreateOrder(orderData, token) {\n  const response = await fetch('http://localhost:5197/api/order', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(orderData)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to create order');\n  }\n  return response.json();\n}\nexport async function apiGetOrdersByStoreId(storeId, token) {\n  const response = await fetch(`http://localhost:5197/api/order/by-store/${storeId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch orders');\n  }\n  return response.json();\n}\nexport async function apiUpdateOrderStatus(orderId, status, token) {\n  const response = await fetch(`http://localhost:5197/api/order/${orderId}/status`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(status)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update order status');\n  }\n}\nexport async function apiGetOrdersByBuyer(token) {\n  const response = await fetch(`http://localhost:5197/api/order/buyer`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch orders');\n  }\n  return response.json();\n}","map":{"version":3,"names":["apiLogin","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","apiRegister","username","fullname","role","status","message","errorText","text","errorMessage","errorJson","parse","e","apiGetUserProfile","userId","token","apiGetStores","apiCreateStore","storeName","formData","FormData","append","apiUpdateProduct","productId","productData","apiDeleteProduct","apiGetProductById","apiCreateOrder","orderData","apiGetOrdersByStoreId","storeId","apiUpdateOrderStatus","orderId","apiGetOrdersByBuyer"],"sources":["/home/linux/RiderProjects/BBShop/frontend/src/api.js"],"sourcesContent":["export async function apiLogin(email, password) {\n  const response = await fetch('http://localhost:5197/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  return response.json();\n}\n\nexport async function apiRegister(username, email, password, fullname, role) {\n  const response = await fetch('http://localhost:5197/api/user', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ username, email, password, fullname, role }),\n  });\n\n  if (response.status === 201 || response.status === 204) {\n    // Return a success message or an empty object for successful registration\n    return { message: 'Registration successful' };\n  } else {\n    // Handle error response\n    const errorText = await response.text();\n    let errorMessage = 'Registration failed';\n    try {\n      const errorJson = JSON.parse(errorText);\n      if (errorJson && errorJson.message) {\n        errorMessage = errorJson.message;\n      }\n    } catch (e) {\n      errorMessage = errorText || errorMessage;\n    }\n    throw new Error(errorMessage);\n  }\n}\n\n\nexport async function apiGetUserProfile(userId, token) {\n  const response = await fetch(`http://localhost:5197/api/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch profile');\n  }\n  return response.json();\n}\n\nexport async function apiGetStores(token) {\n  const response = await fetch('http://localhost:5197/api/store', {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch stores');\n  }\n  return response.json();\n}\n\nexport async function apiCreateStore(storeName, token) {\n  const formData = new FormData();\n  formData.append('storeName', storeName);\n\n  const response = await fetch('http://localhost:5197/api/store', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to create store');\n  }\n  return response.json();\n}\n\nexport async function apiUpdateProduct(productId, productData, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n    body: productData,\n  });\n\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Failed to update product: ${errorText}`);\n  }\n\n  // Expect no content status for successful update\n  if (response.status === 204) {\n    return true;\n  }\n\n  return response.json();\n}\n\n\n\nexport async function apiDeleteProduct(productId, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Failed to delete product: ${errorText}`);\n  }\n\n  // Expect no content status for successful delete\n  if (response.status === 204) {\n    return true;\n  }\n\n  return response.json();\n}\n\n\nexport async function apiGetProductById(productId, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch product');\n  }\n  return response.json();\n}\n\nexport async function apiCreateOrder(orderData, token) {\n  const response = await fetch('http://localhost:5197/api/order', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n    body: JSON.stringify(orderData),\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to create order');\n  }\n  return response.json();\n}\n\nexport async function apiGetOrdersByStoreId(storeId, token) {\n  const response = await fetch(`http://localhost:5197/api/order/by-store/${storeId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to fetch orders');\n  }\n  return response.json();\n}\n\nexport async function apiUpdateOrderStatus(orderId, status, token) {\n  const response = await fetch(`http://localhost:5197/api/order/${orderId}/status`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n    body: JSON.stringify(status),\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to update order status');\n  }\n}\n\n\n\nexport async function apiGetOrdersByBuyer(token) {\n  const response = await fetch(`http://localhost:5197/api/order/buyer`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch orders');\n  }\n  return response.json();\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}