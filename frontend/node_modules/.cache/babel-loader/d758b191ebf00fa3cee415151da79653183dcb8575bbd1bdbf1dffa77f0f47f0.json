{"ast":null,"code":"var _jsxFileName = \"/home/linux/RiderProjects/BBShop/frontend/src/components/OrderListPageBuyer.js\",\n  _s = $RefreshSig$();\n// OrderListPageBuyer.js\nimport React, { useState, useEffect } from 'react';\nimport { apiGetOrdersByBuyer } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderListPageBuyer() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('authToken');\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const data = await apiGetOrdersByBuyer(token);\n        setOrders(data);\n      } catch (error) {\n        setError('Failed to fetch orders');\n      }\n    };\n    fetchOrders();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: orders.length > 0 ? orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [\"Order ID: \", order.orderId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 44\n              }, this), \" \", order.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Order Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 44\n              }, this), \" \", order.orderDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Products:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [item.productName, \" - Quantity: \", item.quantity]\n              }, item.orderItemId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, order.orderId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderListPageBuyer, \"ltQlmbpbGRq4Y8tlu+/WG7UjAzY=\");\n_c = OrderListPageBuyer;\nexport default OrderListPageBuyer;\nvar _c;\n$RefreshReg$(_c, \"OrderListPageBuyer\");","map":{"version":3,"names":["React","useState","useEffect","apiGetOrdersByBuyer","jsxDEV","_jsxDEV","OrderListPageBuyer","_s","orders","setOrders","error","setError","token","localStorage","getItem","fetchOrders","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","order","orderId","status","orderDate","orderItems","item","productName","quantity","orderItemId","_c","$RefreshReg$"],"sources":["/home/linux/RiderProjects/BBShop/frontend/src/components/OrderListPageBuyer.js"],"sourcesContent":["// OrderListPageBuyer.js\nimport React, { useState, useEffect } from 'react';\nimport { apiGetOrdersByBuyer } from '../api';\n\nfunction OrderListPageBuyer() {\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('authToken');\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const data = await apiGetOrdersByBuyer(token);\n        setOrders(data);\n      } catch (error) {\n        setError('Failed to fetch orders');\n      }\n    };\n\n    fetchOrders();\n  }, [token]);\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Orders</h1>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      <div className=\"row\">\n        {orders.length > 0 ? (\n          orders.map((order) => (\n            <div className=\"col-md-4 mb-4\" key={order.orderId}>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Order ID: {order.orderId}</h5>\n                  <p className=\"card-text\"><strong>Status:</strong> {order.status}</p>\n                  <p className=\"card-text\"><strong>Order Date:</strong> {order.orderDate}</p>\n                  <p className=\"card-text\"><strong>Products:</strong></p>\n                  <ul>\n                    {order.orderItems.map(item => (\n                      <li key={item.orderItemId}>{item.productName} - Quantity: {item.quantity}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No orders found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default OrderListPageBuyer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}