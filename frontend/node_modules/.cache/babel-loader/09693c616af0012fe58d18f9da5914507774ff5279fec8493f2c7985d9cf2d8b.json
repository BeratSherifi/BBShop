{"ast":null,"code":"var _jsxFileName = \"/home/linux/RiderProjects/BBShop/frontend/src/components/OrderListPageSeller.js\",\n  _s = $RefreshSig$();\n// OrderListPageSeller.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { apiGetOrdersByStore, apiUpdateOrderStatus } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderListPageSeller() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const navigate = useNavigate();\n  const token = localStorage.getItem('authToken');\n  const userId = sessionStorage.getItem('userId');\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await fetch(`http://localhost:5197/api/Store/by-user-id/${userId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const store = await response.json();\n          const ordersData = await apiGetOrdersByStore(store.storeId, token);\n          setOrders(ordersData);\n        } else {\n          setError('Failed to fetch store');\n        }\n      } catch (error) {\n        setError('An error occurred. Please try again.');\n      }\n    };\n    fetchOrders();\n  }, [userId, token]);\n  const handleUpdateStatus = async (orderId, status) => {\n    try {\n      await apiUpdateOrderStatus(orderId, status, token);\n      setSuccess('Order status updated successfully!');\n      setError(null);\n      // Refresh orders\n      const store = await fetch(`http://localhost:5197/api/Store/by-user-id/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json());\n      const ordersData = await apiGetOrdersByStore(store.storeId, token);\n      setOrders(ordersData);\n    } catch (error) {\n      setSuccess(null);\n      setError('Failed to update order status');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [\"Order ID: \", order.orderId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Order Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 42\n              }, this), \" \", new Date(order.orderDate).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 42\n              }, this), \" \", order.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 42\n              }, this), \" \", order.userId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [item.productName, \" - Quantity: \", item.quantity]\n              }, item.orderItemId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => handleUpdateStatus(order.orderId, e.target.value),\n              value: order.status,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Not Completed\",\n                children: \"Not Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, order.orderId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderListPageSeller, \"XgJeEx732xQmz0h6jJ8J/K10yY4=\", false, function () {\n  return [useNavigate];\n});\n_c = OrderListPageSeller;\nexport default OrderListPageSeller;\nvar _c;\n$RefreshReg$(_c, \"OrderListPageSeller\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","apiGetOrdersByStore","apiUpdateOrderStatus","jsxDEV","_jsxDEV","OrderListPageSeller","_s","orders","setOrders","error","setError","success","setSuccess","navigate","token","localStorage","getItem","userId","sessionStorage","fetchOrders","response","fetch","method","headers","ok","store","json","ordersData","storeId","handleUpdateStatus","orderId","status","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","Date","orderDate","toLocaleString","orderItems","item","productName","quantity","orderItemId","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/home/linux/RiderProjects/BBShop/frontend/src/components/OrderListPageSeller.js"],"sourcesContent":["// OrderListPageSeller.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { apiGetOrdersByStore, apiUpdateOrderStatus } from '../api';\n\nfunction OrderListPageSeller() {\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const navigate = useNavigate();\n  const token = localStorage.getItem('authToken');\n  const userId = sessionStorage.getItem('userId');\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await fetch(`http://localhost:5197/api/Store/by-user-id/${userId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n\n        if (response.ok) {\n          const store = await response.json();\n          const ordersData = await apiGetOrdersByStore(store.storeId, token);\n          setOrders(ordersData);\n        } else {\n          setError('Failed to fetch store');\n        }\n      } catch (error) {\n        setError('An error occurred. Please try again.');\n      }\n    };\n\n    fetchOrders();\n  }, [userId, token]);\n\n  const handleUpdateStatus = async (orderId, status) => {\n    try {\n      await apiUpdateOrderStatus(orderId, status, token);\n      setSuccess('Order status updated successfully!');\n      setError(null);\n      // Refresh orders\n      const store = await fetch(`http://localhost:5197/api/Store/by-user-id/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n      }).then(response => response.json());\n      const ordersData = await apiGetOrdersByStore(store.storeId, token);\n      setOrders(ordersData);\n    } catch (error) {\n      setSuccess(null);\n      setError('Failed to update order status');\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-4\">Orders</h1>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      {success && <div className=\"alert alert-success\">{success}</div>}\n      <div className=\"row\">\n        {orders.map((order) => (\n          <div className=\"col-md-12 mb-4\" key={order.orderId}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Order ID: {order.orderId}</h5>\n                <p className=\"card-text\"><strong>Order Date:</strong> {new Date(order.orderDate).toLocaleString()}</p>\n                <p className=\"card-text\"><strong>Status:</strong> {order.status}</p>\n                <p className=\"card-text\"><strong>User ID:</strong> {order.userId}</p>\n                <ul>\n                  {order.orderItems.map(item => (\n                    <li key={item.orderItemId}>{item.productName} - Quantity: {item.quantity}</li>\n                  ))}\n                </ul>\n                <select onChange={(e) => handleUpdateStatus(order.orderId, e.target.value)} value={order.status}>\n                  <option value=\"Pending\">Pending</option>\n                  <option value=\"Completed\">Completed</option>\n                  <option value=\"Not Completed\">Not Completed</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default OrderListPageSeller;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}