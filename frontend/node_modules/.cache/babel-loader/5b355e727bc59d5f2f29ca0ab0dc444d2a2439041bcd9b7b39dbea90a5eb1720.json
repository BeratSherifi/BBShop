{"ast":null,"code":"var _jsxFileName = \"/home/linux/RiderProjects/BBShop/frontend/src/components/StorePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StorePage() {\n  _s();\n  const [storeName, setStoreName] = useState(\"\");\n  const [stores, setStores] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const userId = sessionStorage.getItem(\"userId\");\n  const token = localStorage.getItem('authToken');\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(`http://localhost:5197/api/Store/by-user-id/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setStores(data);\n        setError(null);\n      } else {\n        setError(\"Failed to fetch stores\");\n      }\n    } catch (error) {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  useEffect(() => {\n    fetchStores();\n  }, []);\n  const handleCreateStore = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"storeName\", storeName);\n    try {\n      const response = await fetch('http://localhost:5197/api/store', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (response.ok) {\n        setStoreName(\"\");\n        setError(null);\n        fetchStores(); // Refresh the store list\n      } else {\n        setError(\"Failed to create store\");\n      }\n    } catch (error) {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateStore,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: storeName,\n        onChange: e => setStoreName(e.target.value),\n        placeholder: \"Store Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"CREATE STORE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Stores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stores.map(store => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: store.storeName\n        }, store.storeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(StorePage, \"9VkZO7KmLK7yYY6bFmkE0QElDX8=\", false, function () {\n  return [useNavigate];\n});\n_c = StorePage;\nexport default StorePage;\nvar _c;\n$RefreshReg$(_c, \"StorePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","StorePage","_s","storeName","setStoreName","stores","setStores","error","setError","navigate","userId","sessionStorage","getItem","token","localStorage","fetchStores","response","fetch","method","headers","ok","data","json","handleCreateStore","e","preventDefault","formData","FormData","append","body","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","store","storeId","_c","$RefreshReg$"],"sources":["/home/linux/RiderProjects/BBShop/frontend/src/components/StorePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction StorePage() {\n  const [storeName, setStoreName] = useState(\"\");\n  const [stores, setStores] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const userId= sessionStorage.getItem(\"userId\");\n\n  const token = localStorage.getItem('authToken');\n\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(`http://localhost:5197/api/Store/by-user-id/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setStores(data);\n        setError(null);\n      } else {\n        setError(\"Failed to fetch stores\");\n      }\n    } catch (error) {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n\n  useEffect(() => {\n    fetchStores();\n  }, []);\n\n  const handleCreateStore = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"storeName\", storeName);\n\n    try {\n      const response = await fetch('http://localhost:5197/api/store', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n        body: formData,\n      });\n      if (response.ok) {\n        setStoreName(\"\");\n        setError(null);\n        fetchStores(); // Refresh the store list\n      } else {\n        setError(\"Failed to create store\");\n      }\n    } catch (error) {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleCreateStore}>\n        <input\n          type=\"text\"\n          value={storeName}\n          onChange={(e) => setStoreName(e.target.value)}\n          placeholder=\"Store Name\"\n        />\n        <button type=\"submit\">CREATE STORE</button>\n      </form>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      <div>\n        <h2>Your Stores</h2>\n        <ul>\n          {stores.map(store => (\n            <li key={store.storeId}>{store.storeName}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default StorePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}