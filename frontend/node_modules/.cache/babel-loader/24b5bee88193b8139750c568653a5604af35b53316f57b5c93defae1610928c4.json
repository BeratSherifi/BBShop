{"ast":null,"code":"var _jsxFileName = \"/home/linux/RiderProjects/BBShop/frontend/src/components/OrderListPageBuyer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { apiGetOrdersByStoreId } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderListPageBuyer() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('authToken');\n  const userId = sessionStorage.getItem('userId');\n  const fetchOrders = async () => {\n    try {\n      const data = await apiGetOrdersByStoreId(userId, token);\n      setOrders(data);\n    } catch (err) {\n      setError('Failed to fetch orders');\n    }\n  };\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Order ID: \", order.orderId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", order.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order Date: \", new Date(order.orderDate).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Product: \", item.productId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Quantity: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, item.orderItemId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, order.orderId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderListPageBuyer, \"ltQlmbpbGRq4Y8tlu+/WG7UjAzY=\");\n_c = OrderListPageBuyer;\nexport default OrderListPageBuyer;\nvar _c;\n$RefreshReg$(_c, \"OrderListPageBuyer\");","map":{"version":3,"names":["React","useEffect","useState","apiGetOrdersByStoreId","jsxDEV","_jsxDEV","OrderListPageBuyer","_s","orders","setOrders","error","setError","token","localStorage","getItem","userId","sessionStorage","fetchOrders","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","orderId","status","Date","orderDate","toLocaleString","orderItems","item","productId","quantity","orderItemId","_c","$RefreshReg$"],"sources":["/home/linux/RiderProjects/BBShop/frontend/src/components/OrderListPageBuyer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { apiGetOrdersByStoreId } from '../api';\n\nfunction OrderListPageBuyer() {\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('authToken');\n  const userId = sessionStorage.getItem('userId');\n\n  const fetchOrders = async () => {\n    try {\n      const data = await apiGetOrdersByStoreId(userId, token);\n      setOrders(data);\n    } catch (err) {\n      setError('Failed to fetch orders');\n    }\n  };\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>My Orders</h1>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      <ul className=\"list-group\">\n        {orders.map(order => (\n          <li key={order.orderId} className=\"list-group-item\">\n            <h5>Order ID: {order.orderId}</h5>\n            <p>Status: {order.status}</p>\n            <p>Order Date: {new Date(order.orderDate).toLocaleString()}</p>\n            <ul>\n              {order.orderItems.map(item => (\n                <li key={item.orderItemId}>\n                  <p>Product: {item.productId}</p>\n                  <p>Quantity: {item.quantity}</p>\n                </li>\n              ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default OrderListPageBuyer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,qBAAqB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,MAAMC,MAAM,GAAGC,cAAc,CAACF,OAAO,CAAC,QAAQ,CAAC;EAE/C,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMf,qBAAqB,CAACY,MAAM,EAAEH,KAAK,CAAC;MACvDH,SAAS,CAACS,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZR,QAAQ,CAAC,wBAAwB,CAAC;IACpC;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdgB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBf,KAAK,iBAAIL,OAAA;MAAKe,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3DpB,OAAA;MAAIe,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBb,MAAM,CAACkB,GAAG,CAACC,KAAK,iBACftB,OAAA;QAAwBe,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBACjDhB,OAAA;UAAAgB,QAAA,GAAI,YAAU,EAACM,KAAK,CAACC,OAAO;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClCpB,OAAA;UAAAgB,QAAA,GAAG,UAAQ,EAACM,KAAK,CAACE,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BpB,OAAA;UAAAgB,QAAA,GAAG,cAAY,EAAC,IAAIS,IAAI,CAACH,KAAK,CAACI,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/DpB,OAAA;UAAAgB,QAAA,EACGM,KAAK,CAACM,UAAU,CAACP,GAAG,CAACQ,IAAI,iBACxB7B,OAAA;YAAAgB,QAAA,gBACEhB,OAAA;cAAAgB,QAAA,GAAG,WAAS,EAACa,IAAI,CAACC,SAAS;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChCpB,OAAA;cAAAgB,QAAA,GAAG,YAAU,EAACa,IAAI,CAACE,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFzBS,IAAI,CAACG,WAAW;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGrB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAXEE,KAAK,CAACC,OAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CA1CQD,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AA4C3B,eAAeA,kBAAkB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}