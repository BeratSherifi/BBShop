{"ast":null,"code":"export async function apiLogin(email, password) {\n  const response = await fetch('http://localhost:5197/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  return response.json();\n}\nexport async function apiRegister(username, email, password, fullname, role) {\n  const response = await fetch('http://localhost:5197/api/user', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n      fullname,\n      role\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Registration failed');\n  }\n  const responseData = await response.text();\n  return responseData ? JSON.parse(responseData) : {};\n}\nexport async function apiGetUserProfile(userId, token) {\n  const response = await fetch(`http://localhost:5197/api/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch profile');\n  }\n  return response.json();\n}\nexport async function apiGetStores(token) {\n  const response = await fetch('http://localhost:5197/api/store', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch stores');\n  }\n  return response.json();\n}\nexport async function apiCreateStore(storeName, token) {\n  const formData = new FormData();\n  formData.append('storeName', storeName);\n  const response = await fetch('http://localhost:5197/api/store', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Failed to create store');\n  }\n  return response.json();\n}\n\n// api.js\nexport async function apiUpdateProduct(productId, productData, token) {\n  const formData = new FormData();\n  formData.append('productName', productData.productName);\n  formData.append('description', productData.description);\n  formData.append('price', productData.price);\n  formData.append('stockQuantity', productData.stockQuantity);\n  if (productData.image) {\n    formData.append('image', productData.image);\n  }\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update product');\n  }\n  return response.json();\n}\nexport async function apiDeleteProduct(productId, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Failed to delete product: ${errorText}`);\n  }\n  return response.json();\n}","map":{"version":3,"names":["apiLogin","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","apiRegister","username","fullname","role","responseData","text","parse","apiGetUserProfile","userId","token","apiGetStores","apiCreateStore","storeName","formData","FormData","append","apiUpdateProduct","productId","productData","productName","description","price","stockQuantity","image","apiDeleteProduct","errorText"],"sources":["/home/linux/RiderProjects/BBShop/frontend/src/api.js"],"sourcesContent":["export async function apiLogin(email, password) {\n  const response = await fetch('http://localhost:5197/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  return response.json();\n}\n\nexport async function apiRegister(username, email, password, fullname, role) {\n  const response = await fetch('http://localhost:5197/api/user', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ username, email, password, fullname, role }),\n  });\n  if (!response.ok) {\n    throw new Error('Registration failed');\n  }\n  const responseData = await response.text();\n  return responseData ? JSON.parse(responseData) : {};\n}\n\nexport async function apiGetUserProfile(userId, token) {\n  const response = await fetch(`http://localhost:5197/api/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch profile');\n  }\n  return response.json();\n}\n\nexport async function apiGetStores(token) {\n  const response = await fetch('http://localhost:5197/api/store', {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch stores');\n  }\n  return response.json();\n}\n\nexport async function apiCreateStore(storeName, token) {\n  const formData = new FormData();\n  formData.append('storeName', storeName);\n\n  const response = await fetch('http://localhost:5197/api/store', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to create store');\n  }\n  return response.json();\n}\n\n// api.js\nexport async function apiUpdateProduct(productId, productData, token) {\n  const formData = new FormData();\n  formData.append('productName', productData.productName);\n  formData.append('description', productData.description);\n  formData.append('price', productData.price);\n  formData.append('stockQuantity', productData.stockQuantity);\n  if (productData.image) {\n    formData.append('image', productData.image);\n  }\n\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to update product');\n  }\n  return response.json();\n}\n\nexport async function apiDeleteProduct(productId, token) {\n  const response = await fetch(`http://localhost:5197/api/product/${productId}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`Failed to delete product: ${errorText}`);\n  }\n  return response.json();\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}